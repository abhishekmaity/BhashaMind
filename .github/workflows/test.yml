name: CI

on: [push, pull_request]

jobs:
  test-python-backend: # Renamed from test-backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        run: |
          cd backend-python
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          cd backend-python
          flake8 app tests # Targeting specific folders for clarity
      - name: Lint with pylint
        run: |
          cd backend-python
          # Ensure PYTHONPATH is set for pylint to find local modules
          PYTHONPATH=. pylint --fail-under=8 app tests
      - name: Type check with mypy
        run: |
          cd backend-python
          mypy app --config-file mypy.ini
      - name: Run Python FastAPI tests
        run: |
          cd backend-python
          # Ensure PYTHONPATH is set for pytest if it also needs to find local modules
          PYTHONPATH=. python -m pytest

  test-react-frontend: # Renamed from test-frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Node dependencies
        run: |
          cd frontend-react # Changed directory
          npm ci
      - name: Lint with ESLint
        run: |
          cd frontend-react # Changed directory
          npm run lint
      - name: Run React tests
        run: |
          cd frontend-react # Changed directory
          npm run test

  test-java-backend: # New job for Java backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build, Lint, and Test Java backend
        run: |
          cd backend-java
          ./mvnw -B clean package # Compiles, runs tests by default during package phase
          ./mvnw -B checkstyle:check
          ./mvnw -B pmd:check
          # Note: 'mvn package' usually runs tests. If tests need to be run separately or if there are integration tests: ./mvnw -B verify
